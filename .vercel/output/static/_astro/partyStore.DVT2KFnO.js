import{j as i,F as p,m,n as a}from"./userStore.KU0otYFz.js";const u=()=>i.jsx("div",{className:"flex justify-center items-center mt-10",children:i.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:"124",height:"124",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"icon icon-tabler icons-tabler-outline icon-tabler-loader-2 animate-spin text-primaryColor",children:[i.jsx("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),i.jsx("path",{d:"M12 3a9 9 0 1 0 9 9"})]})}),n=await new p,r=m({}),c=a({status:"",message:""}),o=a({status:"",message:""});async function g(s){try{const t=await n.registerParty(s);t&&r.setKey(t,{...s,id:t})}catch(t){c.set({status:"error",message:`Error: ${t.code}`})}}async function h(){try{(await n.getPartiesList()).map((t,e)=>{r.setKey(t.id||e.toString(),t)})}catch(s){c.set({status:"error",message:`Error: ${s.code}`})}}async function y(s,t){if(s?.admissionApplications?.some(e=>e===t))throw new Error("Application already sent");o.set({status:"loading",message:"Sending application..."});try{const e=s?.admissionApplications?.length?[...s?.admissionApplications,t]:[t],l=await n.updateParty(s,{...s,admissionApplications:e});return r.setKey(s.id,{...s,admissionApplications:e}),o.set({status:"success",message:"Application sent successfully. Waiting for approval..."}),l}catch(e){o.set({status:"error",message:`Error: ${e.code}`})}}export{u as L,o as a,g as c,h as g,r as p,y as r};
